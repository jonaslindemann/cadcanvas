var s = new Array()

s[0] = "introduction^introduction.html^Overview^     <p>This is the documentation of the CadCanvas component, intended for CadCanvas developers.    <p><a name=\"SecRequirements\"></a><h2 class=\"\">Requirements</h2>      <p>The CadCanvas component depends on the Graphics32 library, which must be installed before the CadCanvas components. The Graphics32 comes with the CadCanvas distribution    <p>1. Unzip the files    <p>2. Add location of main installation directory to Tools | Environment Options | Library | Library Path.    <p>3. Select File | Open... on the menu bar. Set Files of type to Delphi package source, locate and open GR32_DSGN_D6.dpk (GR32_DSGN_K for Kylix, GR32_DSGN_D2005 for Delphi 2005, GR32_DSGN_D7 for Delphi7, GR32_DSGN_D6 for Delphi6, GR32_DSGN_D5 for Delphi5, GR32_DSGN_D4 for Delphi4 or GR32_DSGN_B5 for C++ Builder) A package editor window will appear. Click Compile, then click Install; If compiler asks whether you want to save changes, usually it is a good idea to choose No.    <p><a name=\"SecCadCanvasInstall\"></a><h3 class=\"\">Installing CadCanvas</h3>      <p>1. Unpack the distribution using 7-zip or an equivalent archiver.    <p>2. Start the Delphi IDE. Open the cadcanvas.bpg project-group file located in the root of the distribution.)    <p>3. Add the following directories to the library search path using the Tools/Environment options/library tab: [CadCanvas root directory]\\src, [CadCanvas root directory]\\depends\\graphics32, [CadCanvas root directory]\\depends\\FastGEO    <p>4. Open the Project Manager by selecting View/Project Manager in the menu.    <p>5. In the Project Manager window select the cadcomp.bpl package library. Using the right mouse button select the Install meny to start the installation of the packag library.  CadCanvas Sources Overview^0"
s[1] = "CadCanvas^CadCanvas.html^Component for drawing CAD like elements on virtual canvas.^ This unit contains the CadCanvas component for supporting a CAD like drawing surface. The unit also contains the classes implementing the supported CAD geomtry primitives. ^0"
s[2] = "CadCanvas.TCadElement^CadCanvas.TCadElement.html^Base class for all CAD geometric elements^ ^0"
s[3] = "CadCanvas.TCadElement.Create^CadCanvas.TCadElement.html#Create^^    ^0"
s[4] = "CadCanvas.TCadElement.Color^CadCanvas.TCadElement.html#Color^Color of element.^ 1-255, 256 = color by layer ^0"
s[5] = "CadCanvas.TCadElement.ColorByLayer^CadCanvas.TCadElement.html#ColorByLayer^Returns true if color by layer^ ^0"
s[6] = "CadCanvas.TCadVector^CadCanvas.TCadVector.html^Basic vector class^ ^0"
s[7] = "CadCanvas.TCadVector.FX^CadCanvas.TCadVector.html#FX^^ ^0"
s[8] = "CadCanvas.TCadVector.FY^CadCanvas.TCadVector.html#FY^^ ^0"
s[9] = "CadCanvas.TCadVector.ScalarProduct^CadCanvas.TCadVector.html#ScalarProduct^Computes the scalar product with vector v.^    ^0"
s[10] = "CadCanvas.TCadVector.CrossProduct^CadCanvas.TCadVector.html#CrossProduct^Computes the cross product with vector v.^    ^0"
s[11] = "CadCanvas.TCadVector.Angle^CadCanvas.TCadVector.html#Angle^Computes the angle between two vectors.^    ^0"
s[12] = "CadCanvas.TCadVector.EqualTo^CadCanvas.TCadVector.html#EqualTo^Returns true if vector equal to v.^    ^0"
s[13] = "CadCanvas.TCadVector.Assign^CadCanvas.TCadVector.html#Assign^Assigns the vector from the input vector v.^    ^0"
s[14] = "CadCanvas.TCadVector.Length^CadCanvas.TCadVector.html#Length^Returns the length of the vector.^ ^0"
s[15] = "CadCanvas.TCadVector.X^CadCanvas.TCadVector.html#X^Vector x component.^ ^0"
s[16] = "CadCanvas.TCadVector.Y^CadCanvas.TCadVector.html#Y^Vector y component.^ ^0"
s[17] = "CadCanvas.TCadPoint^CadCanvas.TCadPoint.html^Alias for the TCadVector^ ^0"
s[18] = "CadCanvas.TCadLine^CadCanvas.TCadLine.html^Base class for line elements^ ^0"
s[19] = "CadCanvas.TCadLine.Create^CadCanvas.TCadLine.html#Create^^    ^0"
s[20] = "CadCanvas.TCadSimpleLine^CadCanvas.TCadSimpleLine.html^Simple line class^ ^0"
s[21] = "CadCanvas.TCadSimpleLine.Create^CadCanvas.TCadSimpleLine.html#Create^^    ^0"
s[22] = "CadCanvas.TCadSimpleLine.Destroy^CadCanvas.TCadSimpleLine.html#Destroy^^    ^0"
s[23] = "CadCanvas.TCadSimpleLine.Intersection^CadCanvas.TCadSimpleLine.html#Intersection^Computes the intersection point with the line L.^ Returns an <a class=\"normal\" href=\"CadCanvas.TCadPoint.html\">TCadPoint</a> instance if succesful, otherwise nil is returned. The TCadPoint instance is not freed by the class.    ^0"
s[24] = "CadCanvas.TCadSimpleLine.StartPoint^CadCanvas.TCadSimpleLine.html#StartPoint^Start point of line^ ^0"
s[25] = "CadCanvas.TCadSimpleLine.EndPoint^CadCanvas.TCadSimpleLine.html#EndPoint^End point of line^ ^0"
s[26] = "CadCanvas.TCadPolyLine^CadCanvas.TCadPolyLine.html^Polyline class^ ^0"
s[27] = "CadCanvas.TCadPolyLine.Create^CadCanvas.TCadPolyLine.html#Create^^    ^0"
s[28] = "CadCanvas.TCadPolyLine.Destroy^CadCanvas.TCadPolyLine.html#Destroy^^    ^0"
s[29] = "CadCanvas.TCadPolyLine.Add^CadCanvas.TCadPolyLine.html#Add^Adds a point to the polyline.^ Point is owned by polyline.    ^0"
s[30] = "CadCanvas.TCadPolyLine.Add^CadCanvas.TCadPolyLine.html#Add^Adds a point to the polyline.^    ^0"
s[31] = "CadCanvas.TCadPolyLine.Count^CadCanvas.TCadPolyLine.html#Count^Returns the number of point in polyline.^ ^0"
s[32] = "CadCanvas.TCadPolyLine.Points^CadCanvas.TCadPolyLine.html#Points^Return point at index, first = 0, last = Count-1^ ^0"
s[33] = "CadCanvas.TCadPolygon^CadCanvas.TCadPolygon.html^Polygon class (not yet implemented).^ ^0"
s[34] = "CadCanvas.TCadPolygon.Create^CadCanvas.TCadPolygon.html#Create^^    ^0"
s[35] = "CadCanvas.TCadPolygon.Destroy^CadCanvas.TCadPolygon.html#Destroy^^    ^0"
s[36] = "CadCanvas.TCadPolygon.Add^CadCanvas.TCadPolygon.html#Add^^    ^0"
s[37] = "CadCanvas.TCadPolygon.Count^CadCanvas.TCadPolygon.html#Count^^ ^0"
s[38] = "CadCanvas.TCadPolygon.Points^CadCanvas.TCadPolygon.html#Points^^ ^0"
s[39] = "CadCanvas.TCadSolid^CadCanvas.TCadSolid.html^Solid class (4 sided polygon)^ ^0"
s[40] = "CadCanvas.TCadSolid.Create^CadCanvas.TCadSolid.html#Create^^    ^0"
s[41] = "CadCanvas.TCadSolid.Destroy^CadCanvas.TCadSolid.html#Destroy^^    ^0"
s[42] = "CadCanvas.TCadSolid.Points^CadCanvas.TCadSolid.html#Points^Returns point at index, first = 0, last = 3.^ Point references are read-only. ^0"
s[43] = "CadCanvas.TCadText^CadCanvas.TCadText.html^Text class^ ^0"
s[44] = "CadCanvas.TCadText.Create^CadCanvas.TCadText.html#Create^^    ^0"
s[45] = "CadCanvas.TCadText.Destroy^CadCanvas.TCadText.html#Destroy^^    ^0"
s[46] = "CadCanvas.TCadText.TextString^CadCanvas.TCadText.html#TextString^Text to be output^ ^0"
s[47] = "CadCanvas.TCadText.Height^CadCanvas.TCadText.html#Height^Text height in units^ ^0"
s[48] = "CadCanvas.TCadText.Position^CadCanvas.TCadText.html#Position^Text insertion point, lower left corner^ ^0"
s[49] = "CadCanvas.TCadText.RotationAngle^CadCanvas.TCadText.html#RotationAngle^Text rotation counter clockwise in degrees^ ^0"
s[50] = "CadCanvas.TCadLayer^CadCanvas.TCadLayer.html^Layer class for containing a set of drawing elements with common properties.^ Elements are added by CadCanvas. ^0"
s[51] = "CadCanvas.TCadLayer.Create^CadCanvas.TCadLayer.html#Create^^    ^0"
s[52] = "CadCanvas.TCadLayer.Destroy^CadCanvas.TCadLayer.html#Destroy^^    ^0"
s[53] = "CadCanvas.TCadLayer.Clear^CadCanvas.TCadLayer.html#Clear^Clears all element in the layer^    ^0"
s[54] = "CadCanvas.TCadLayer.Add^CadCanvas.TCadLayer.html#Add^Adds an element to the layer^    ^0"
s[55] = "CadCanvas.TCadLayer.Count^CadCanvas.TCadLayer.html#Count^Returns the number of elements in the layer^ ^0"
s[56] = "CadCanvas.TCadLayer.Elements^CadCanvas.TCadLayer.html#Elements^Returns element at index, first = 0, last = Count-1^ ^0"
s[57] = "CadCanvas.TCadLayer.Name^CadCanvas.TCadLayer.html#Name^Layer name^ ^0"
s[58] = "CadCanvas.TCadLayer.Color^CadCanvas.TCadLayer.html#Color^Layer color, 1-255^ ^0"
s[59] = "CadCanvas.TCadLayer.Visible^CadCanvas.TCadLayer.html#Visible^Layer visibility.^ If set to false, the layer will not be rendered by a CadCanvas component. ^0"
s[60] = "CadCanvas.TCadCanvas^CadCanvas.TCadCanvas.html^Non visual component for managing a CAD drawing surface.^ The CadCanvas component connects to the output components CadDxfDevice and CadWinDevice. ^0"
s[61] = "CadCanvas.TCadCanvas.Create^CadCanvas.TCadCanvas.html#Create^Protected declarations^    ^0"
s[62] = "CadCanvas.TCadCanvas.Destroy^CadCanvas.TCadCanvas.html#Destroy^^    ^0"
s[63] = "CadCanvas.TCadCanvas.GetLayerIndex^CadCanvas.TCadCanvas.html#GetLayerIndex^Returns the index of the <code>Name</code> layer.^    ^0"
s[64] = "CadCanvas.TCadCanvas.GetLayerWithName^CadCanvas.TCadCanvas.html#GetLayerWithName^Returns the layer instance of a layer named <code>Name</code>.^ If not found <code>Nil</code> is returned.    ^0"
s[65] = "CadCanvas.TCadCanvas.ResetTextJustify^CadCanvas.TCadCanvas.html#ResetTextJustify^Resets the text justify of the <a class=\"normal\" href=\"CadCanvas.TCadCanvas.html#TextOut\">TextOut</a> method.^    ^0"
s[66] = "CadCanvas.TCadCanvas.ResetMaxMin^CadCanvas.TCadCanvas.html#ResetMaxMin^Reset max and min calculation settings^    ^0"
s[67] = "CadCanvas.TCadCanvas.Clear^CadCanvas.TCadCanvas.html#Clear^Clear all elements and layers in the CAD drawing surface^    ^0"
s[68] = "CadCanvas.TCadCanvas.AddLayer^CadCanvas.TCadCanvas.html#AddLayer^Creates and adds a new layer to the canvas^    ^0"
s[69] = "CadCanvas.TCadCanvas.DeleteLayerIndex^CadCanvas.TCadCanvas.html#DeleteLayerIndex^Delete the layer at <code>idx</code>.^    ^0"
s[70] = "CadCanvas.TCadCanvas.DeleteLayer^CadCanvas.TCadCanvas.html#DeleteLayer^Delete the <code>Layer</code>.^    ^0"
s[71] = "CadCanvas.TCadCanvas.AddElement^CadCanvas.TCadCanvas.html#AddElement^Adds an <code>Element</code> instance to the current layer.^    ^0"
s[72] = "CadCanvas.TCadCanvas.MoveTo^CadCanvas.TCadCanvas.html#MoveTo^Moves the invisible cursor to given position^    ^0"
s[73] = "CadCanvas.TCadCanvas.LineTo^CadCanvas.TCadCanvas.html#LineTo^Creates line from the cursor position to the new position.^ The cursor is moved to the new position.    ^0"
s[74] = "CadCanvas.TCadCanvas.BeginPolyLine^CadCanvas.TCadCanvas.html#BeginPolyLine^Starts a polyline^    ^0"
s[75] = "CadCanvas.TCadCanvas.AddPoint^CadCanvas.TCadCanvas.html#AddPoint^Adds a point to the current polyline^    ^0"
s[76] = "CadCanvas.TCadCanvas.AddFromPolyline^CadCanvas.TCadCanvas.html#AddFromPolyline^Adds points from given polyline.^    ^0"
s[77] = "CadCanvas.TCadCanvas.AddFromPolyGon^CadCanvas.TCadCanvas.html#AddFromPolyGon^Adds points from given polygon.^    ^0"
s[78] = "CadCanvas.TCadCanvas.Rectangle^CadCanvas.TCadCanvas.html#Rectangle^Creats a rectangle consisting of line elements (<a class=\"normal\" href=\"CadCanvas.TCadLine.html\">TCadLine</a>).^    ^0"
s[79] = "CadCanvas.TCadCanvas.EndPolyLine^CadCanvas.TCadCanvas.html#EndPolyLine^Finishes the current polyline^    ^0"
s[80] = "CadCanvas.TCadCanvas.BeginPolyGon^CadCanvas.TCadCanvas.html#BeginPolyGon^Begins a new polygon.^    ^0"
s[81] = "CadCanvas.TCadCanvas.EndPolyGon^CadCanvas.TCadCanvas.html#EndPolyGon^Ends current polygon.^    ^0"
s[82] = "CadCanvas.TCadCanvas.TextOut^CadCanvas.TCadCanvas.html#TextOut^Draws a text a the specified position^    ^0"
s[83] = "CadCanvas.TCadCanvas.TextSizeX^CadCanvas.TCadCanvas.html#TextSizeX^Returns the width of the <code>TextString</code> string.^    ^0"
s[84] = "CadCanvas.TCadCanvas.TextSizeY^CadCanvas.TCadCanvas.html#TextSizeY^Returns the height of the <code>TextString</code> string.^    ^0"
s[85] = "CadCanvas.TCadCanvas.SimplePoint^CadCanvas.TCadCanvas.html#SimplePoint^Draws a point at the specified position^    ^0"
s[86] = "CadCanvas.TCadCanvas.Solid4^CadCanvas.TCadCanvas.html#Solid4^Draws 4-sided solid^    ^0"
s[87] = "CadCanvas.TCadCanvas.Solid3^CadCanvas.TCadCanvas.html#Solid3^Draws a 3-sided solid^    ^0"
s[88] = "CadCanvas.TCadCanvas.Layers^CadCanvas.TCadCanvas.html#Layers^Returns the layer at index, first = 0, last = LayerCount-1^ ^0"
s[89] = "CadCanvas.TCadCanvas.LayerCount^CadCanvas.TCadCanvas.html#LayerCount^Returns the number of layers^ ^0"
s[90] = "CadCanvas.TCadCanvas.CurrentLayer^CadCanvas.TCadCanvas.html#CurrentLayer^Sets/gets the current layer^ ^0"
s[91] = "CadCanvas.TCadCanvas.CurrentColor^CadCanvas.TCadCanvas.html#CurrentColor^Sets/gets the current color^ ^0"
s[92] = "CadCanvas.TCadCanvas.ModelMax^CadCanvas.TCadCanvas.html#ModelMax^Returns the max position of the current drawing^ ^0"
s[93] = "CadCanvas.TCadCanvas.ModelMin^CadCanvas.TCadCanvas.html#ModelMin^Returns the min position of the current drawing^ ^0"
s[94] = "CadCanvas.TCadCanvas.TextHeight^CadCanvas.TCadCanvas.html#TextHeight^Sets/gets the current text height^ ^0"
s[95] = "CadCanvas.TCadCanvas.TextRotation^CadCanvas.TCadCanvas.html#TextRotation^Sets/gets the current text rotation^ ^0"
s[96] = "CadCanvas.TCadCanvas.TextTweakFactor^CadCanvas.TCadCanvas.html#TextTweakFactor^Correction factor used to calculate the width of text strings.^ ^0"
s[97] = "CadCanvas.TCadCanvas.TextJustifyX^CadCanvas.TCadCanvas.html#TextJustifyX^Set the X justify options for text output^ ^0"
s[98] = "CadCanvas.TCadCanvas.TextJustifyY^CadCanvas.TCadCanvas.html#TextJustifyY^Set the Y justify options for text output.^ ^0"
s[99] = "CadCanvas.CadCanvasMajorVersion^CadCanvas.html#CadCanvasMajorVersion^^ ^0"
s[100] = "CadCanvas.CadCanvasMinorVersion^CadCanvas.html#CadCanvasMinorVersion^^ ^0"
s[101] = "CadCanvas.CadCanvasRelease^CadCanvas.html#CadCanvasRelease^^ ^0"
s[102] = "CadCanvas.ColorByLayer^CadCanvas.html#ColorByLayer^^ ^0"
s[103] = "CadCanvas.Register^CadCanvas.html#Register^Published declarations^    ^0"
s[104] = "CadCanvas.TCadTextJustify^CadCanvas.html#TCadTextJustify^Text justification constants.^ For use with <code>TextJustifyX</code> and <code>TextJustifyY</code> properties.  tjLeft    tjRight    tjCenter    tjTop    tjBottom   ^0"
s[105] = "CadDxfDevice^CadDxfDevice.html^^ ^0"
s[106] = "CadDxfDevice.TCadDxfDevice^CadDxfDevice.TCadDxfDevice.html^^ ^0"
s[107] = "CadDxfDevice.TCadDxfDevice.DxfTag^CadDxfDevice.TCadDxfDevice.html#DxfTag^Protected declarations^    ^0"
s[108] = "CadDxfDevice.TCadDxfDevice.DxfInt^CadDxfDevice.TCadDxfDevice.html#DxfInt^^    ^0"
s[109] = "CadDxfDevice.TCadDxfDevice.DxfFloat^CadDxfDevice.TCadDxfDevice.html#DxfFloat^^    ^0"
s[110] = "CadDxfDevice.TCadDxfDevice.DxfBeginSection^CadDxfDevice.TCadDxfDevice.html#DxfBeginSection^^    ^0"
s[111] = "CadDxfDevice.TCadDxfDevice.DxfEndSection^CadDxfDevice.TCadDxfDevice.html#DxfEndSection^^    ^0"
s[112] = "CadDxfDevice.TCadDxfDevice.DxfBeginTables^CadDxfDevice.TCadDxfDevice.html#DxfBeginTables^^    ^0"
s[113] = "CadDxfDevice.TCadDxfDevice.DxfEndTables^CadDxfDevice.TCadDxfDevice.html#DxfEndTables^^    ^0"
s[114] = "CadDxfDevice.TCadDxfDevice.DxfBeginTable^CadDxfDevice.TCadDxfDevice.html#DxfBeginTable^^    ^0"
s[115] = "CadDxfDevice.TCadDxfDevice.DxfEndTable^CadDxfDevice.TCadDxfDevice.html#DxfEndTable^^    ^0"
s[116] = "CadDxfDevice.TCadDxfDevice.DxfBeginLayer^CadDxfDevice.TCadDxfDevice.html#DxfBeginLayer^^    ^0"
s[117] = "CadDxfDevice.TCadDxfDevice.DxfEndLayer^CadDxfDevice.TCadDxfDevice.html#DxfEndLayer^^    ^0"
s[118] = "CadDxfDevice.TCadDxfDevice.DxfBeginEntitites^CadDxfDevice.TCadDxfDevice.html#DxfBeginEntitites^^    ^0"
s[119] = "CadDxfDevice.TCadDxfDevice.DxfEndEntitites^CadDxfDevice.TCadDxfDevice.html#DxfEndEntitites^^    ^0"
s[120] = "CadDxfDevice.TCadDxfDevice.DxfColor^CadDxfDevice.TCadDxfDevice.html#DxfColor^^    ^0"
s[121] = "CadDxfDevice.TCadDxfDevice.DxfLineType^CadDxfDevice.TCadDxfDevice.html#DxfLineType^^    ^0"
s[122] = "CadDxfDevice.TCadDxfDevice.DxfLine^CadDxfDevice.TCadDxfDevice.html#DxfLine^^    ^0"
s[123] = "CadDxfDevice.TCadDxfDevice.DxfLayer^CadDxfDevice.TCadDxfDevice.html#DxfLayer^^    ^0"
s[124] = "CadDxfDevice.TCadDxfDevice.DxfFirstPoint^CadDxfDevice.TCadDxfDevice.html#DxfFirstPoint^^    ^0"
s[125] = "CadDxfDevice.TCadDxfDevice.DxfSecondPoint^CadDxfDevice.TCadDxfDevice.html#DxfSecondPoint^^    ^0"
s[126] = "CadDxfDevice.TCadDxfDevice.DxfThirdPoint^CadDxfDevice.TCadDxfDevice.html#DxfThirdPoint^^    ^0"
s[127] = "CadDxfDevice.TCadDxfDevice.DxfFourthPoint^CadDxfDevice.TCadDxfDevice.html#DxfFourthPoint^^    ^0"
s[128] = "CadDxfDevice.TCadDxfDevice.DxfPolyline^CadDxfDevice.TCadDxfDevice.html#DxfPolyline^^    ^0"
s[129] = "CadDxfDevice.TCadDxfDevice.DxfPolylineIntro^CadDxfDevice.TCadDxfDevice.html#DxfPolylineIntro^^    ^0"
s[130] = "CadDxfDevice.TCadDxfDevice.DxfPolylineFlag^CadDxfDevice.TCadDxfDevice.html#DxfPolylineFlag^^    ^0"
s[131] = "CadDxfDevice.TCadDxfDevice.DxfVertex^CadDxfDevice.TCadDxfDevice.html#DxfVertex^^    ^0"
s[132] = "CadDxfDevice.TCadDxfDevice.DxfEndSeq^CadDxfDevice.TCadDxfDevice.html#DxfEndSeq^^    ^0"
s[133] = "CadDxfDevice.TCadDxfDevice.DxfText^CadDxfDevice.TCadDxfDevice.html#DxfText^^    ^0"
s[134] = "CadDxfDevice.TCadDxfDevice.DxfTextHeight^CadDxfDevice.TCadDxfDevice.html#DxfTextHeight^^    ^0"
s[135] = "CadDxfDevice.TCadDxfDevice.DxfTextAlign^CadDxfDevice.TCadDxfDevice.html#DxfTextAlign^^    ^0"
s[136] = "CadDxfDevice.TCadDxfDevice.DxfTextString^CadDxfDevice.TCadDxfDevice.html#DxfTextString^^    ^0"
s[137] = "CadDxfDevice.TCadDxfDevice.DxfTextRotation^CadDxfDevice.TCadDxfDevice.html#DxfTextRotation^^    ^0"
s[138] = "CadDxfDevice.TCadDxfDevice.DxfSolid^CadDxfDevice.TCadDxfDevice.html#DxfSolid^^    ^0"
s[139] = "CadDxfDevice.TCadDxfDevice.DxfEndOfFile^CadDxfDevice.TCadDxfDevice.html#DxfEndOfFile^^    ^0"
s[140] = "CadDxfDevice.TCadDxfDevice.Create^CadDxfDevice.TCadDxfDevice.html#Create^Public declarations^    ^0"
s[141] = "CadDxfDevice.TCadDxfDevice.Destroy^CadDxfDevice.TCadDxfDevice.html#Destroy^^    ^0"
s[142] = "CadDxfDevice.TCadDxfDevice.Render^CadDxfDevice.TCadDxfDevice.html#Render^^    ^0"
s[143] = "CadDxfDevice.TCadDxfDevice.CadCanvas^CadDxfDevice.TCadDxfDevice.html#CadCanvas^Published declarations^ ^0"
s[144] = "CadDxfDevice.TCadDxfDevice.FileName^CadDxfDevice.TCadDxfDevice.html#FileName^^ ^0"
s[145] = "CadDxfDevice.TCadDxfDevice.Partial^CadDxfDevice.TCadDxfDevice.html#Partial^^ ^0"
s[146] = "CadDxfDevice.TCadDxfDevice.SolidOutlines^CadDxfDevice.TCadDxfDevice.html#SolidOutlines^^ ^0"
s[147] = "CadDxfDevice.Register^CadDxfDevice.html#Register^^    ^0"
s[148] = "CadG32Device^CadG32Device.html^Output device component for drawing a CadCanvas in a window^  This unit contains the CadG32Device component for drawing the elements of a CadCanvas component in a window. The CadCanvas is assigned using the CadCanvas property of the component. This can be done directly in the design mode of the Delphi IDE. Jonas Lindemann  ^0"
s[149] = "CadG32Device.TCadG32Layer^CadG32Device.TCadG32Layer.html^Layer class for describing the properties of the layer while drawing it in a window^ ^0"
s[150] = "CadG32Device.TCadG32Layer.Create^CadG32Device.TCadG32Layer.html#Create^^    ^0"
s[151] = "CadG32Device.TCadG32Layer.Destroy^CadG32Device.TCadG32Layer.html#Destroy^^    ^0"
s[152] = "CadG32Device.TCadG32Layer.Color^CadG32Device.TCadG32Layer.html#Color^Pen used to draw the line^ ^0"
s[153] = "CadG32Device.TCadG32Colors^CadG32Device.TCadG32Colors.html^Color map class for representing index colors with Delphi colors^ ^0"
s[154] = "CadG32Device.TCadG32Colors.Create^CadG32Device.TCadG32Colors.html#Create^^    ^0"
s[155] = "CadG32Device.TCadG32Colors.Destroy^CadG32Device.TCadG32Colors.html#Destroy^^    ^0"
s[156] = "CadG32Device.TCadG32Colors.Color^CadG32Device.TCadG32Colors.html#Color^Gets/sets the index color of the color map, index = 1 - 255^ ^0"
s[157] = "CadG32Device.TCadG32Device^CadG32Device.TCadG32Device.html^Component for drawing the contents of CadCanvas on a window^ ^0"
s[158] = "CadG32Device.TCadG32Device.Create^CadG32Device.TCadG32Device.html#Create^Public declarations^    ^0"
s[159] = "CadG32Device.TCadG32Device.Destroy^CadG32Device.TCadG32Device.html#Destroy^^    ^0"
s[160] = "CadG32Device.TCadG32Device.W2S^CadG32Device.TCadG32Device.html#W2S^Converts a world coordinate to a screen coordinate^    ^0"
s[161] = "CadG32Device.TCadG32Device.L2S^CadG32Device.TCadG32Device.html#L2S^Converts a world length to a screen length^    ^0"
s[162] = "CadG32Device.TCadG32Device.S2W^CadG32Device.TCadG32Device.html#S2W^Converts a screen coordinate to a world coordinate^    ^0"
s[163] = "CadG32Device.TCadG32Device.SetWindow^CadG32Device.TCadG32Device.html#SetWindow^Sets the window to be drawn in world coordinates^    ^0"
s[164] = "CadG32Device.TCadG32Device.ZoomExtent^CadG32Device.TCadG32Device.html#ZoomExtent^Zooms to the extent of the drawing in the CadCanvas drawing^    ^0"
s[165] = "CadG32Device.TCadG32Device.Render^CadG32Device.TCadG32Device.html#Render^Renders the CadCanvas drawing in the window^    ^0"
s[166] = "CadG32Device.TCadG32Device.AddLayer^CadG32Device.TCadG32Device.html#AddLayer^Add a TCadG32Layer representing a TCadLayer in the CadCanvas drawing^    ^0"
s[167] = "CadG32Device.TCadG32Device.ClearLayers^CadG32Device.TCadG32Device.html#ClearLayers^Clears all defined layers^    ^0"
s[168] = "CadG32Device.TCadG32Device.WindowMin^CadG32Device.TCadG32Device.html#WindowMin^Returns the minimum point of the drawn window^ ^0"
s[169] = "CadG32Device.TCadG32Device.WindowMax^CadG32Device.TCadG32Device.html#WindowMax^Returns the maximum point of the drawn window^ ^0"
s[170] = "CadG32Device.TCadG32Device.Layers^CadG32Device.TCadG32Device.html#Layers^Returns the index window layer^ ^0"
s[171] = "CadG32Device.TCadG32Device.WindowColor^CadG32Device.TCadG32Device.html#WindowColor^Gets/Sets the color to represent the indexed color^ ^0"
s[172] = "CadG32Device.TCadG32Device.CadCanvas^CadG32Device.TCadG32Device.html#CadCanvas^Gets/Sets the CadCanvas used when drawing^ ^0"
s[173] = "CadG32Device.TCadG32Device.Image^CadG32Device.TCadG32Device.html#Image^Gets/Sets the Image used when drawing^ ^0"
s[174] = "CadG32Device.TCadG32Device.ScaleFactor^CadG32Device.TCadG32Device.html#ScaleFactor^Gets/Sets the scalefactor used when drawing^ ^0"
s[175] = "CadG32Device.TCadG32Device.AutoSize^CadG32Device.TCadG32Device.html#AutoSize^Determines if the window is automatically zoom to the extents when redrawn^ ^0"
s[176] = "CadG32Device.TCadG32Device.AutoCenter^CadG32Device.TCadG32Device.html#AutoCenter^^ ^0"
s[177] = "CadG32Device.TCadG32Device.DrawBackground^CadG32Device.TCadG32Device.html#DrawBackground^Determines if a background is to be drawn^ ^0"
s[178] = "CadG32Device.TCadG32Device.FileName^CadG32Device.TCadG32Device.html#FileName^Gets/sets the filename used when creating WMF files^ ^0"
s[179] = "CadG32Device.TCadG32Device.MarginX^CadG32Device.TCadG32Device.html#MarginX^Gets/sets the left right margin in pixels^ ^0"
s[180] = "CadG32Device.TCadG32Device.MarginY^CadG32Device.TCadG32Device.html#MarginY^Gets/sets the top bottom margin in pixels^ ^0"
s[181] = "CadG32Device.TCadG32Device.SolidOutlines^CadG32Device.TCadG32Device.html#SolidOutlines^^ ^0"
s[182] = "CadG32Device.TCadG32Device.PointSize^CadG32Device.TCadG32Device.html#PointSize^^ ^0"
s[183] = "CadG32Device.Register^CadG32Device.html#Register^^    ^0"
s[184] = "CadMesh^CadMesh.html^^ ^0"
s[185] = "CadMesh.TIsoLine^CadMesh.TIsoLine.html^^ ^0"
s[186] = "CadMesh.TIsoLine.Create^CadMesh.TIsoLine.html#Create^^    ^0"
s[187] = "CadMesh.TIsoLine.Value^CadMesh.TIsoLine.html#Value^^ ^0"
s[188] = "CadMesh.TIsoLine.Color^CadMesh.TIsoLine.html#Color^^ ^0"
s[189] = "CadMesh.TInterval^CadMesh.TInterval.html^^ ^0"
s[190] = "CadMesh.TInterval.Create^CadMesh.TInterval.html#Create^^    ^0"
s[191] = "CadMesh.TInterval.Color^CadMesh.TInterval.html#Color^^ ^0"
s[192] = "CadMesh.TIsoLines^CadMesh.TIsoLines.html^^ ^0"
s[193] = "CadMesh.TIsoLines.Create^CadMesh.TIsoLines.html#Create^^    ^0"
s[194] = "CadMesh.TIsoLines.Destroy^CadMesh.TIsoLines.html#Destroy^^    ^0"
s[195] = "CadMesh.TIsoLines.Clear^CadMesh.TIsoLines.html#Clear^^    ^0"
s[196] = "CadMesh.TIsoLines.InsideInterval^CadMesh.TIsoLines.html#InsideInterval^^    ^0"
s[197] = "CadMesh.TIsoLines.Values^CadMesh.TIsoLines.html#Values^^ ^0"
s[198] = "CadMesh.TIsoLines.Colors^CadMesh.TIsoLines.html#Colors^^ ^0"
s[199] = "CadMesh.TIsoLines.IntervalColors^CadMesh.TIsoLines.html#IntervalColors^^ ^0"
s[200] = "CadMesh.TIsoLines.Size^CadMesh.TIsoLines.html#Size^^ ^0"
s[201] = "CadMesh.TIsoLines.IntervalSize^CadMesh.TIsoLines.html#IntervalSize^^ ^0"
s[202] = "CadMesh.TIsoLines.Max^CadMesh.TIsoLines.html#Max^^ ^0"
s[203] = "CadMesh.TIsoLines.Min^CadMesh.TIsoLines.html#Min^^ ^0"
s[204] = "CadMesh.TIsoLines.AutoUpdate^CadMesh.TIsoLines.html#AutoUpdate^^ ^0"
s[205] = "CadMesh.TCadMesh^CadMesh.TCadMesh.html^^ ^0"
s[206] = "CadMesh.TCadMesh.Create^CadMesh.TCadMesh.html#Create^Public declarations^    ^0"
s[207] = "CadMesh.TCadMesh.Destroy^CadMesh.TCadMesh.html#Destroy^^    ^0"
s[208] = "CadMesh.TCadMesh.Execute^CadMesh.TCadMesh.html#Execute^^    ^0"
s[209] = "CadMesh.TCadMesh.Clear^CadMesh.TCadMesh.html#Clear^^    ^0"
s[210] = "CadMesh.TCadMesh.PrintLn^CadMesh.TCadMesh.html#PrintLn^^    ^0"
s[211] = "CadMesh.TCadMesh.IsoLines^CadMesh.TCadMesh.html#IsoLines^^ ^0"
s[212] = "CadMesh.TCadMesh.TriangleLayer^CadMesh.TCadMesh.html#TriangleLayer^^ ^0"
s[213] = "CadMesh.TCadMesh.IntervalLayers^CadMesh.TCadMesh.html#IntervalLayers^^ ^0"
s[214] = "CadMesh.TCadMesh.CadCavnas^CadMesh.TCadMesh.html#CadCavnas^Published declarations^ ^0"
s[215] = "CadMesh.TCadMesh.Triangle^CadMesh.TCadMesh.html#Triangle^^ ^0"
s[216] = "CadMesh.TCadMesh.MeshType^CadMesh.TCadMesh.html#MeshType^^ ^0"
s[217] = "CadMesh.TCadMesh.DebugOutput^CadMesh.TCadMesh.html#DebugOutput^^ ^0"
s[218] = "CadMesh.TCadMesh.DryRun^CadMesh.TCadMesh.html#DryRun^^ ^0"
s[219] = "CadMesh.Register^CadMesh.html#Register^^    ^0"
s[220] = "CadMesh.TMeshType^CadMesh.html#TMeshType^^  mtTriangles    mtIsolines    mtFilled   ^0"
s[221] = "CadOpenGLDevice^CadOpenGLDevice.html^^ ^0"
s[222] = "CadOpenGLDevice.TCadOpenGLDevice^CadOpenGLDevice.TCadOpenGLDevice.html^^ ^0"
s[223] = "CadOpenGLDevice.Register^CadOpenGLDevice.html#Register^Published declarations^    ^0"
s[224] = "CadSurfaceDiagram2D^CadSurfaceDiagram2D.html^^ ^0"
s[225] = "CadSurfaceDiagram2D.TScaling^CadSurfaceDiagram2D.TScaling.html^^ ^0"
s[226] = "CadSurfaceDiagram2D.TScaling.Create^CadSurfaceDiagram2D.TScaling.html#Create^^    ^0"
s[227] = "CadSurfaceDiagram2D.TScaling.L2G^CadSurfaceDiagram2D.TScaling.html#L2G^^    ^0"
s[228] = "CadSurfaceDiagram2D.TScaling.G2L^CadSurfaceDiagram2D.TScaling.html#G2L^^    ^0"
s[229] = "CadSurfaceDiagram2D.TScaling.ScaleX^CadSurfaceDiagram2D.TScaling.html#ScaleX^^ ^0"
s[230] = "CadSurfaceDiagram2D.TScaling.UnitMultiplier^CadSurfaceDiagram2D.TScaling.html#UnitMultiplier^^ ^0"
s[231] = "CadSurfaceDiagram2D.TScaling.VerticalExaggeration^CadSurfaceDiagram2D.TScaling.html#VerticalExaggeration^^ ^0"
s[232] = "CadSurfaceDiagram2D.TCadAxes2D^CadSurfaceDiagram2D.TCadAxes2D.html^^ ^0"
s[233] = "CadSurfaceDiagram2D.TCadAxes2D.Create^CadSurfaceDiagram2D.TCadAxes2D.html#Create^^    ^0"
s[234] = "CadSurfaceDiagram2D.TCadAxes2D.Destroy^CadSurfaceDiagram2D.TCadAxes2D.html#Destroy^^    ^0"
s[235] = "CadSurfaceDiagram2D.TCadAxes2D.Execute^CadSurfaceDiagram2D.TCadAxes2D.html#Execute^^    ^0"
s[236] = "CadSurfaceDiagram2D.TCadAxes2D.CadCanvas^CadSurfaceDiagram2D.TCadAxes2D.html#CadCanvas^^ ^0"
s[237] = "CadSurfaceDiagram2D.TCadAxes2D.MinPoint^CadSurfaceDiagram2D.TCadAxes2D.html#MinPoint^^ ^0"
s[238] = "CadSurfaceDiagram2D.TCadAxes2D.MaxPoint^CadSurfaceDiagram2D.TCadAxes2D.html#MaxPoint^^ ^0"
s[239] = "CadSurfaceDiagram2D.TCadAxes2D.TickDistanceX^CadSurfaceDiagram2D.TCadAxes2D.html#TickDistanceX^^ ^0"
s[240] = "CadSurfaceDiagram2D.TCadAxes2D.TickDistanceY^CadSurfaceDiagram2D.TCadAxes2D.html#TickDistanceY^^ ^0"
s[241] = "CadSurfaceDiagram2D.TCadAxes2D.TickSize^CadSurfaceDiagram2D.TCadAxes2D.html#TickSize^^ ^0"
s[242] = "CadSurfaceDiagram2D.TCadAxes2D.TickLabelSize^CadSurfaceDiagram2D.TCadAxes2D.html#TickLabelSize^^ ^0"
s[243] = "CadSurfaceDiagram2D.TCadAxes2D.TickLabelDistance^CadSurfaceDiagram2D.TCadAxes2D.html#TickLabelDistance^^ ^0"
s[244] = "CadSurfaceDiagram2D.TCadAxes2D.TickLabelFormat^CadSurfaceDiagram2D.TCadAxes2D.html#TickLabelFormat^^ ^0"
s[245] = "CadSurfaceDiagram2D.TCadAxes2D.LabelX^CadSurfaceDiagram2D.TCadAxes2D.html#LabelX^^ ^0"
s[246] = "CadSurfaceDiagram2D.TCadAxes2D.LabelY^CadSurfaceDiagram2D.TCadAxes2D.html#LabelY^^ ^0"
s[247] = "CadSurfaceDiagram2D.TCadAxes2D.LabelUnitX^CadSurfaceDiagram2D.TCadAxes2D.html#LabelUnitX^^ ^0"
s[248] = "CadSurfaceDiagram2D.TCadAxes2D.LabelUnitY^CadSurfaceDiagram2D.TCadAxes2D.html#LabelUnitY^^ ^0"
s[249] = "CadSurfaceDiagram2D.TCadAxes2D.LabelSize^CadSurfaceDiagram2D.TCadAxes2D.html#LabelSize^^ ^0"
s[250] = "CadSurfaceDiagram2D.TCadAxes2D.LabelUnitSize^CadSurfaceDiagram2D.TCadAxes2D.html#LabelUnitSize^^ ^0"
s[251] = "CadSurfaceDiagram2D.TCadAxes2D.LabelDistance^CadSurfaceDiagram2D.TCadAxes2D.html#LabelDistance^^ ^0"
s[252] = "CadSurfaceDiagram2D.TCadAxes2D.LabelUnitSpacing^CadSurfaceDiagram2D.TCadAxes2D.html#LabelUnitSpacing^^ ^0"
s[253] = "CadSurfaceDiagram2D.TCadAxes2D.Scaling^CadSurfaceDiagram2D.TCadAxes2D.html#Scaling^^ ^0"
s[254] = "CadSurfaceDiagram2D.TCadAxesRecord^CadSurfaceDiagram2D.TCadAxesRecord.html^Property group defining properties for the diagram axes.^ Properties given in drawing units are scaled to represent a certain size on a &quot;virtual drawing canvas&quot; given in a specified scale 1:xxx. (Need to find a better definition ...) ^0"
s[255] = "CadSurfaceDiagram2D.TCadAxesRecord.Create^CadSurfaceDiagram2D.TCadAxesRecord.html#Create^^    ^0"
s[256] = "CadSurfaceDiagram2D.TCadAxesRecord.Destroy^CadSurfaceDiagram2D.TCadAxesRecord.html#Destroy^^    ^0"
s[257] = "CadSurfaceDiagram2D.TCadAxesRecord.Assign^CadSurfaceDiagram2D.TCadAxesRecord.html#Assign^^    ^0"
s[258] = "CadSurfaceDiagram2D.TCadAxesRecord.LockNotify^CadSurfaceDiagram2D.TCadAxesRecord.html#LockNotify^^    ^0"
s[259] = "CadSurfaceDiagram2D.TCadAxesRecord.UnlockNotify^CadSurfaceDiagram2D.TCadAxesRecord.html#UnlockNotify^^    ^0"
s[260] = "CadSurfaceDiagram2D.TCadAxesRecord.OnChangeValue^CadSurfaceDiagram2D.TCadAxesRecord.html#OnChangeValue^^ ^0"
s[261] = "CadSurfaceDiagram2D.TCadAxesRecord.OnChangeAutoX^CadSurfaceDiagram2D.TCadAxesRecord.html#OnChangeAutoX^^ ^0"
s[262] = "CadSurfaceDiagram2D.TCadAxesRecord.OnChangeAutoY^CadSurfaceDiagram2D.TCadAxesRecord.html#OnChangeAutoY^^ ^0"
s[263] = "CadSurfaceDiagram2D.TCadAxesRecord.AutoX^CadSurfaceDiagram2D.TCadAxesRecord.html#AutoX^Automatic calculation of axes X extents.^ ^0"
s[264] = "CadSurfaceDiagram2D.TCadAxesRecord.AutoY^CadSurfaceDiagram2D.TCadAxesRecord.html#AutoY^Automatic calculation of axes Y extents.^ ^0"
s[265] = "CadSurfaceDiagram2D.TCadAxesRecord.MaxX^CadSurfaceDiagram2D.TCadAxesRecord.html#MaxX^Max X coordinate of diagram axes.^ When AutoX i set to <code>True</code> this property is automatically calculated. ^0"
s[266] = "CadSurfaceDiagram2D.TCadAxesRecord.MinX^CadSurfaceDiagram2D.TCadAxesRecord.html#MinX^Min X coordinate of diagram axes.^ When AutoX i set to <code>True</code> this property is automatically calculated. ^0"
s[267] = "CadSurfaceDiagram2D.TCadAxesRecord.MaxY^CadSurfaceDiagram2D.TCadAxesRecord.html#MaxY^Max Y coordinate of diagram axes.^ When AutoY i set to <code>True</code> this property is automatically calculated. ^0"
s[268] = "CadSurfaceDiagram2D.TCadAxesRecord.MinY^CadSurfaceDiagram2D.TCadAxesRecord.html#MinY^Min Y coordinate of diagram axes.^ When AutoY i set to <code>True</code> this property is automatically calculated. ^0"
s[269] = "CadSurfaceDiagram2D.TCadAxesRecord.TickDistanceX^CadSurfaceDiagram2D.TCadAxesRecord.html#TickDistanceX^Distance between axes X tick labels.^ ^0"
s[270] = "CadSurfaceDiagram2D.TCadAxesRecord.TickDistanceY^CadSurfaceDiagram2D.TCadAxesRecord.html#TickDistanceY^Distance between axes Y tick labels.^ ^0"
s[271] = "CadSurfaceDiagram2D.TCadAxesRecord.TickSize^CadSurfaceDiagram2D.TCadAxesRecord.html#TickSize^Size of the tick mark (drawing units).^ ^0"
s[272] = "CadSurfaceDiagram2D.TCadAxesRecord.TickLabelDistance^CadSurfaceDiagram2D.TCadAxesRecord.html#TickLabelDistance^Distance to tick label.^ (drawing units). ^0"
s[273] = "CadSurfaceDiagram2D.TCadAxesRecord.TickLabelSize^CadSurfaceDiagram2D.TCadAxesRecord.html#TickLabelSize^Tick label size.^ (drawing units). ^0"
s[274] = "CadSurfaceDiagram2D.TCadAxesRecord.TickLabelFormat^CadSurfaceDiagram2D.TCadAxesRecord.html#TickLabelFormat^Format string used to represent the tick label value.^ See the Delphi format routine. ^0"
s[275] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelX^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelX^X-axis label string.^ ^0"
s[276] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelY^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelY^X-axis label string.^ ^0"
s[277] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelUnitX^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelUnitX^X-axis label unit string.^ ^0"
s[278] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelUnitY^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelUnitY^X-axis label unit string.^ ^0"
s[279] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelSize^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelSize^Axis label size.^ (drawing units) ^0"
s[280] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelUnitSize^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelUnitSize^Axis label unit size.^ (drawing units) ^0"
s[281] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelDistance^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelDistance^Distance from diagram axes to Axis label.^ (drawing units) ^0"
s[282] = "CadSurfaceDiagram2D.TCadAxesRecord.LabelUnitSpacing^CadSurfaceDiagram2D.TCadAxesRecord.html#LabelUnitSpacing^Spacing between axis label and axis unit label.^ (drawing units) ^0"
s[283] = "CadSurfaceDiagram2D.TCadDiagramRecord^CadSurfaceDiagram2D.TCadDiagramRecord.html^Property group defining global diagram related properties.^ ^0"
s[284] = "CadSurfaceDiagram2D.TCadDiagramRecord.Create^CadSurfaceDiagram2D.TCadDiagramRecord.html#Create^^    ^0"
s[285] = "CadSurfaceDiagram2D.TCadDiagramRecord.Destroy^CadSurfaceDiagram2D.TCadDiagramRecord.html#Destroy^^    ^0"
s[286] = "CadSurfaceDiagram2D.TCadDiagramRecord.Assign^CadSurfaceDiagram2D.TCadDiagramRecord.html#Assign^^    ^0"
s[287] = "CadSurfaceDiagram2D.TCadDiagramRecord.LockNotify^CadSurfaceDiagram2D.TCadDiagramRecord.html#LockNotify^^    ^0"
s[288] = "CadSurfaceDiagram2D.TCadDiagramRecord.UnlockNotify^CadSurfaceDiagram2D.TCadDiagramRecord.html#UnlockNotify^^    ^0"
s[289] = "CadSurfaceDiagram2D.TCadDiagramRecord.OnChangeShowTriangles^CadSurfaceDiagram2D.TCadDiagramRecord.html#OnChangeShowTriangles^^ ^0"
s[290] = "CadSurfaceDiagram2D.TCadDiagramRecord.OnChangeValue^CadSurfaceDiagram2D.TCadDiagramRecord.html#OnChangeValue^^ ^0"
s[291] = "CadSurfaceDiagram2D.TCadDiagramRecord.ShowTriangles^CadSurfaceDiagram2D.TCadDiagramRecord.html#ShowTriangles^Show triangle mesh used for meshing.^ ^0"
s[292] = "CadSurfaceDiagram2D.TCadDiagramRecord.Title^CadSurfaceDiagram2D.TCadDiagramRecord.html#Title^Diagram title.^ ^0"
s[293] = "CadSurfaceDiagram2D.TCadDiagramRecord.TitleSize^CadSurfaceDiagram2D.TCadDiagramRecord.html#TitleSize^Diagram title size in drawing units.^ ^0"
s[294] = "CadSurfaceDiagram2D.TCadDiagramRecord.SubTitle^CadSurfaceDiagram2D.TCadDiagramRecord.html#SubTitle^Diagram sub title.^ ^0"
s[295] = "CadSurfaceDiagram2D.TCadDiagramRecord.SubTitleSize^CadSurfaceDiagram2D.TCadDiagramRecord.html#SubTitleSize^Diagram sub title size in drawing units.^ ^0"
s[296] = "CadSurfaceDiagram2D.TCadDiagramRecord.TitleSpacing^CadSurfaceDiagram2D.TCadDiagramRecord.html#TitleSpacing^Spacing between title and sub title in drawing units.^ ^0"
s[297] = "CadSurfaceDiagram2D.TCadDiagramRecord.TitleDistance^CadSurfaceDiagram2D.TCadDiagramRecord.html#TitleDistance^Distance between title and diagram axes in drawing units.^ ^0"
s[298] = "CadSurfaceDiagram2D.TCadDiagramRecord.ShowLegend^CadSurfaceDiagram2D.TCadDiagramRecord.html#ShowLegend^Legend visibility flag.^ ^0"
s[299] = "CadSurfaceDiagram2D.TCadDiagramRecord.LegendDistance^CadSurfaceDiagram2D.TCadDiagramRecord.html#LegendDistance^Distance from diagram axes to legend in drawing units.^ ^0"
s[300] = "CadSurfaceDiagram2D.TCadDiagramRecord.LegendHeight^CadSurfaceDiagram2D.TCadDiagramRecord.html#LegendHeight^Legend height in drawing units.^ ^0"
s[301] = "CadSurfaceDiagram2D.TCadDiagramRecord.LegendTextHeight^CadSurfaceDiagram2D.TCadDiagramRecord.html#LegendTextHeight^Legend text height in drawing units.^ ^0"
s[302] = "CadSurfaceDiagram2D.TCadDiagramRecord.LegendTextDistance^CadSurfaceDiagram2D.TCadDiagramRecord.html#LegendTextDistance^Distance between legend text labels and legend in drawing units.^ ^0"
s[303] = "CadSurfaceDiagram2D.TCadDiagramRecord.LegendFormat^CadSurfaceDiagram2D.TCadDiagramRecord.html#LegendFormat^Format used to represent the legend values.^ See the Delphi format routine. ^0"
s[304] = "CadSurfaceDiagram2D.TCadDiagramRecord.ScaleX^CadSurfaceDiagram2D.TCadDiagramRecord.html#ScaleX^Diagram X scale.^ 1:ScaleX. When <code>AutoScale</code> is set to <code>True</code> this property is automatically calculated. ^0"
s[305] = "CadSurfaceDiagram2D.TCadDiagramRecord.VerticalExaggeration^CadSurfaceDiagram2D.TCadDiagramRecord.html#VerticalExaggeration^Sets the diagram vertical exaggeration.^ The diagram height is scaled with this amount in the y direction. ^0"
s[306] = "CadSurfaceDiagram2D.TCadDiagramRecord.AutoScale^CadSurfaceDiagram2D.TCadDiagramRecord.html#AutoScale^Flag for automatic scale calculation based on diagram input values.^ ^0"
s[307] = "CadSurfaceDiagram2D.TCadDiagramRecord.LegendSize^CadSurfaceDiagram2D.TCadDiagramRecord.html#LegendSize^Relative legend size with respect to diagram axes.^ (1.0 default) ^0"
s[308] = "CadSurfaceDiagram2D.TCadMeshRecord^CadSurfaceDiagram2D.TCadMeshRecord.html^Property group describing properties controlling diagram mesh generation.^ ^0"
s[309] = "CadSurfaceDiagram2D.TCadMeshRecord.Create^CadSurfaceDiagram2D.TCadMeshRecord.html#Create^^    ^0"
s[310] = "CadSurfaceDiagram2D.TCadMeshRecord.Destroy^CadSurfaceDiagram2D.TCadMeshRecord.html#Destroy^^    ^0"
s[311] = "CadSurfaceDiagram2D.TCadMeshRecord.Assign^CadSurfaceDiagram2D.TCadMeshRecord.html#Assign^^    ^0"
s[312] = "CadSurfaceDiagram2D.TCadMeshRecord.LockNotify^CadSurfaceDiagram2D.TCadMeshRecord.html#LockNotify^^    ^0"
s[313] = "CadSurfaceDiagram2D.TCadMeshRecord.UnlockNotify^CadSurfaceDiagram2D.TCadMeshRecord.html#UnlockNotify^^    ^0"
s[314] = "CadSurfaceDiagram2D.TCadMeshRecord.OnChangeValue^CadSurfaceDiagram2D.TCadMeshRecord.html#OnChangeValue^^ ^0"
s[315] = "CadSurfaceDiagram2D.TCadMeshRecord.AutoLimits^CadSurfaceDiagram2D.TCadMeshRecord.html#AutoLimits^Automatically calculate diagram limits.^ (Default <code>True</code>). ^0"
s[316] = "CadSurfaceDiagram2D.TCadMeshRecord.MaxValue^CadSurfaceDiagram2D.TCadMeshRecord.html#MaxValue^Return max diagram value.^ ^0"
s[317] = "CadSurfaceDiagram2D.TCadMeshRecord.MinValue^CadSurfaceDiagram2D.TCadMeshRecord.html#MinValue^Return min diagram value.^ ^0"
s[318] = "CadSurfaceDiagram2D.TCadMeshRecord.MeshType^CadSurfaceDiagram2D.TCadMeshRecord.html#MeshType^Set the desired mesh type.^ mtTriangles, mtIsolines, mtSolid. (Default mtSolid). ^0"
s[319] = "CadSurfaceDiagram2D.TCadMeshRecord.ClipSurface^CadSurfaceDiagram2D.TCadMeshRecord.html#ClipSurface^Clip to surface.^ (Default <code>False</code>). ^0"
s[320] = "CadSurfaceDiagram2D.TCadMeshRecord.ClipSurfaceType^CadSurfaceDiagram2D.TCadMeshRecord.html#ClipSurfaceType^Determines how the triangles are clipped to a defined surface contour.^ ^0"
s[321] = "CadSurfaceDiagram2D.TCadMeshRecord.TriangleExecutable^CadSurfaceDiagram2D.TCadMeshRecord.html#TriangleExecutable^Search path to Triangle executable.^ ^0"
s[322] = "CadSurfaceDiagram2D.TCadMeshRecord.TriangleImplementation^CadSurfaceDiagram2D.TCadMeshRecord.html#TriangleImplementation^Delaunay algorithm used to create triangulation used to create the diagram mesh.^ ^0"
s[323] = "CadSurfaceDiagram2D.TTrianglePointList^CadSurfaceDiagram2D.TTrianglePointList.html^^ ^0"
s[324] = "CadSurfaceDiagram2D.TTrianglePointList.Create^CadSurfaceDiagram2D.TTrianglePointList.html#Create^^    ^0"
s[325] = "CadSurfaceDiagram2D.TTrianglePointList.Destroy^CadSurfaceDiagram2D.TTrianglePointList.html#Destroy^^    ^0"
s[326] = "CadSurfaceDiagram2D.TTrianglePointList.AddPoint^CadSurfaceDiagram2D.TTrianglePointList.html#AddPoint^^    ^0"
s[327] = "CadSurfaceDiagram2D.TTrianglePointList.Clear^CadSurfaceDiagram2D.TTrianglePointList.html#Clear^^    ^0"
s[328] = "CadSurfaceDiagram2D.TTrianglePointList.Point^CadSurfaceDiagram2D.TTrianglePointList.html#Point^^ ^0"
s[329] = "CadSurfaceDiagram2D.TTrianglePointList.Count^CadSurfaceDiagram2D.TTrianglePointList.html#Count^^ ^0"
s[330] = "CadSurfaceDiagram2D.TCadSurfaceContour^CadSurfaceDiagram2D.TCadSurfaceContour.html^^ ^0"
s[331] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html^Two-dimensional Surface diagram component.^ ^0"
s[332] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Create^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Create^Public declarations^    ^0"
s[333] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Destroy^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Destroy^^    ^0"
s[334] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.AddPoint^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#AddPoint^Add a point/value pair to the surface diagram.^    ^0"
s[335] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Clear^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Clear^Clear all added point/value pairs.^    ^0"
s[336] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Execute^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Execute^Create surface diagram.^ The generated diagram is sent to the CadCanvas specified in the <code>CadCanvas</code> property.    ^0"
s[337] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Axes2D^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Axes2D^^ ^0"
s[338] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.IsoLines^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#IsoLines^Defines the isolines used to generated both a solid surface diagram and a isoline based diagram, see <a class=\"normal\" href=\"CadMesh.TIsoLines.html\">TIsoLines</a>.^ ^0"
s[339] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Scaling^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Scaling^Controls the diagram scaling, see <a class=\"normal\" href=\"CadSurfaceDiagram2D.TScaling.html\">TScaling</a>.^ ^0"
s[340] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.SurfaceContour^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#SurfaceContour^Defines the surface contour used to clip the diagram, see <a class=\"normal\" href=\"CadSurfaceDiagram2D.TCadSurfaceContour.html\">TCadSurfaceContour</a>.^ ^0"
s[341] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.CadCanvas^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#CadCanvas^Target CadCanvas to send generated diagram.^ ^0"
s[342] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Axes^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Axes^Axes property group.^ ^0"
s[343] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Diagram^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Diagram^Diagram property group.^ ^0"
s[344] = "CadSurfaceDiagram2D.TCadSurfaceDiagram2D.Mesh^CadSurfaceDiagram2D.TCadSurfaceDiagram2D.html#Mesh^Mesh property group.^ ^0"
s[345] = "CadSurfaceDiagram2D.StandardScaleCount^CadSurfaceDiagram2D.html#StandardScaleCount^^ ^0"
s[346] = "CadSurfaceDiagram2D.StandardScales^CadSurfaceDiagram2D.html#StandardScales^^ ^0"
s[347] = "CadSurfaceDiagram2D.Register^CadSurfaceDiagram2D.html#Register^^    ^0"
s[348] = "CadSurfaceDiagram2D.TCadMeshClipSurfaceType^CadSurfaceDiagram2D.html#TCadMeshClipSurfaceType^    ^  scClip Remove triangles above surface, clip crossing triangles.  (Unstable)  scRemove Remove triangles above surface.  No clipping.  scRemoveCrossing Remove triangles above and crossing surface.  No clipping.  scRemoveReverse Remove triangles below surface.  No clipping.  scRemoveCrossingReverse Remove triangles below and crossing surface.  No clipping. ^0"
s[349] = "CadSurfaceDiagram2D.TCadScalingOptions^CadSurfaceDiagram2D.html#TCadScalingOptions^^  soAbsolute    soRelativeHeight    soRelativeWidth   ^0"
s[350] = "CadWinDevice^CadWinDevice.html^Output device component for drawing a CadCanvas in a window^  This unit contains the CadWinDevice component for drawing the elements of a CadCanvas component in a window. The CadCanvas is assigned using the CadCanvas property of the component. This can be done directly in the design mode of the Delphi IDE. Jonas Lindemann  ^0"
s[351] = "CadWinDevice.TCadWinLayer^CadWinDevice.TCadWinLayer.html^Layer class for describing the properties of the layer while drawing it in a window^ ^0"
s[352] = "CadWinDevice.TCadWinLayer.Create^CadWinDevice.TCadWinLayer.html#Create^^    ^0"
s[353] = "CadWinDevice.TCadWinLayer.Destroy^CadWinDevice.TCadWinLayer.html#Destroy^^    ^0"
s[354] = "CadWinDevice.TCadWinLayer.Pen^CadWinDevice.TCadWinLayer.html#Pen^Pen used to draw the line^ ^0"
s[355] = "CadWinDevice.TCadWinLayer.Font^CadWinDevice.TCadWinLayer.html#Font^Font used to draw text^ ^0"
s[356] = "CadWinDevice.TCadWinColors^CadWinDevice.TCadWinColors.html^Color map class for representing index colors with Delphi colors^ ^0"
s[357] = "CadWinDevice.TCadWinColors.Create^CadWinDevice.TCadWinColors.html#Create^^    ^0"
s[358] = "CadWinDevice.TCadWinColors.Destroy^CadWinDevice.TCadWinColors.html#Destroy^^    ^0"
s[359] = "CadWinDevice.TCadWinColors.Color^CadWinDevice.TCadWinColors.html#Color^Gets/sets the index color of the color map, index = 1 - 255^ ^0"
s[360] = "CadWinDevice.TCadWinDevice^CadWinDevice.TCadWinDevice.html^Component for drawing the contents of CadCanvas on a window^ ^0"
s[361] = "CadWinDevice.TCadWinDevice.Paint^CadWinDevice.TCadWinDevice.html#Paint^Protected declarations^    ^0"
s[362] = "CadWinDevice.TCadWinDevice.Resize^CadWinDevice.TCadWinDevice.html#Resize^^    ^0"
s[363] = "CadWinDevice.TCadWinDevice.Create^CadWinDevice.TCadWinDevice.html#Create^Public declarations^    ^0"
s[364] = "CadWinDevice.TCadWinDevice.Destroy^CadWinDevice.TCadWinDevice.html#Destroy^^    ^0"
s[365] = "CadWinDevice.TCadWinDevice.W2S^CadWinDevice.TCadWinDevice.html#W2S^Converts a world coordinate to a screen coordinate^    ^0"
s[366] = "CadWinDevice.TCadWinDevice.L2S^CadWinDevice.TCadWinDevice.html#L2S^Converts a world length to a screen length^    ^0"
s[367] = "CadWinDevice.TCadWinDevice.S2W^CadWinDevice.TCadWinDevice.html#S2W^Converts a screen coordinate to a world coordinate^    ^0"
s[368] = "CadWinDevice.TCadWinDevice.SetWindow^CadWinDevice.TCadWinDevice.html#SetWindow^Sets the window to be drawn in world coordinates^    ^0"
s[369] = "CadWinDevice.TCadWinDevice.ZoomExtent^CadWinDevice.TCadWinDevice.html#ZoomExtent^Zooms to the extent of the drawing in the CadCanvas drawing^    ^0"
s[370] = "CadWinDevice.TCadWinDevice.Render^CadWinDevice.TCadWinDevice.html#Render^Renders the CadCanvas drawing in the window^    ^0"
s[371] = "CadWinDevice.TCadWinDevice.RenderWMF^CadWinDevice.TCadWinDevice.html#RenderWMF^Renders the CadCanvas drawing to a Windows Metafile specified in the Filename property^    ^0"
s[372] = "CadWinDevice.TCadWinDevice.AddLayer^CadWinDevice.TCadWinDevice.html#AddLayer^Add a TCadWinLayer representing a TCadLayer in the CadCanvas drawing^    ^0"
s[373] = "CadWinDevice.TCadWinDevice.ClearLayers^CadWinDevice.TCadWinDevice.html#ClearLayers^Clears all defined layers^    ^0"
s[374] = "CadWinDevice.TCadWinDevice.WindowMin^CadWinDevice.TCadWinDevice.html#WindowMin^Returns the minimum point of the drawn window^ ^0"
s[375] = "CadWinDevice.TCadWinDevice.WindowMax^CadWinDevice.TCadWinDevice.html#WindowMax^Returns the maximum point of the drawn window^ ^0"
s[376] = "CadWinDevice.TCadWinDevice.Layers^CadWinDevice.TCadWinDevice.html#Layers^Returns the index window layer^ ^0"
s[377] = "CadWinDevice.TCadWinDevice.WindowColor^CadWinDevice.TCadWinDevice.html#WindowColor^Gets/Sets the color to represent the indexed color^ ^0"
s[378] = "CadWinDevice.TCadWinDevice.CadCanvas^CadWinDevice.TCadWinDevice.html#CadCanvas^Gets/Sets the CadCanvas used when drawing^ ^0"
s[379] = "CadWinDevice.TCadWinDevice.ScaleFactor^CadWinDevice.TCadWinDevice.html#ScaleFactor^Gets/Sets the scalefactor used when drawing^ ^0"
s[380] = "CadWinDevice.TCadWinDevice.AutoSize^CadWinDevice.TCadWinDevice.html#AutoSize^Determines if the window is automatically zoom to the extents when redrawn^ ^0"
s[381] = "CadWinDevice.TCadWinDevice.DrawBackground^CadWinDevice.TCadWinDevice.html#DrawBackground^Determines if a background is to be drawn^ ^0"
s[382] = "CadWinDevice.TCadWinDevice.FileName^CadWinDevice.TCadWinDevice.html#FileName^Gets/sets the filename used when creating WMF files^ ^0"
s[383] = "CadWinDevice.TCadWinDevice.MarginX^CadWinDevice.TCadWinDevice.html#MarginX^Gets/sets the left right margin in pixels^ ^0"
s[384] = "CadWinDevice.TCadWinDevice.MarginY^CadWinDevice.TCadWinDevice.html#MarginY^Gets/sets the top bottom margin in pixels^ ^0"
s[385] = "CadWinDevice.TCadWinDevice.SolidOutlines^CadWinDevice.TCadWinDevice.html#SolidOutlines^^ ^0"
s[386] = "CadWinDevice.TCadWinDevice.PointSize^CadWinDevice.TCadWinDevice.html#PointSize^^ ^0"
s[387] = "CadWinDevice.TCadWinDevice.Align^CadWinDevice.TCadWinDevice.html#Align^^ ^0"
s[388] = "CadWinDevice.TCadWinDevice.Anchors^CadWinDevice.TCadWinDevice.html#Anchors^^ ^0"
s[389] = "CadWinDevice.TCadWinDevice.Font^CadWinDevice.TCadWinDevice.html#Font^^ ^0"
s[390] = "CadWinDevice.TCadWinDevice.Color^CadWinDevice.TCadWinDevice.html#Color^^ ^0"
s[391] = "CadWinDevice.Register^CadWinDevice.html#Register^^    ^0"
s[392] = "Delaunay^Delaunay.html^Credit to Paul Bourke (pbourke@swin.edu.au) for the original Fortran 77 Program :)) Conversion to Visual Basic by EluZioN (EluZioN@casesladder.com) Conversion from VB to Delphi6 by Dr Steve Evans (steve@lociuk.com) ///////////////////////////////////////////////////////////////////////////// June 2002 Update by Dr Steve Evans (steve@lociuk.com): Heap memory allocation added to prevent stack overflow when MaxVertices and MaxTriangles are very large.^ Additional Updates in June 2002: Bug in InCircle function fixed. Radius r := Sqrt(rsqr). Check for duplicate points added when inserting new point. For speed, all points pre-sorted in x direction using quicksort algorithm and triangles flagged when no longer needed. The circumcircle centre and radius of the triangles are now stored to improve calculation time. Additional Updates in October 2004 Jonas Lindemann Improved OO interface ///////////////////////////////////////////////////////////////////////////// You can use this code however you like providing the above credits remain in tact ^0"
s[393] = "Delaunay.dVertex^Delaunay.dVertex.html^Points (Vertices)^ ^0"
s[394] = "Delaunay.dVertex.x^Delaunay.dVertex.html#x^^ ^0"
s[395] = "Delaunay.dVertex.y^Delaunay.dVertex.html#y^^ ^0"
s[396] = "Delaunay.dVertex.v^Delaunay.dVertex.html#v^^ ^0"
s[397] = "Delaunay.TDelaunayVertex^Delaunay.TDelaunayVertex.html^^ ^0"
s[398] = "Delaunay.TDelaunayVertex.X^Delaunay.TDelaunayVertex.html#X^^ ^0"
s[399] = "Delaunay.TDelaunayVertex.Y^Delaunay.TDelaunayVertex.html#Y^^ ^0"
s[400] = "Delaunay.TDelaunayVertex.Value^Delaunay.TDelaunayVertex.html#Value^^ ^0"
s[401] = "Delaunay.TDelaunayTriangle^Delaunay.TDelaunayTriangle.html^^ ^0"
s[402] = "Delaunay.TDelaunayTriangle.VertexIndex^Delaunay.TDelaunayTriangle.html#VertexIndex^^ ^0"
s[403] = "Delaunay.dTriangle^Delaunay.dTriangle.html^Created Triangles, vv# are the vertex pointers^ ^0"
s[404] = "Delaunay.dTriangle.vv0^Delaunay.dTriangle.html#vv0^^ ^0"
s[405] = "Delaunay.dTriangle.vv1^Delaunay.dTriangle.html#vv1^^ ^0"
s[406] = "Delaunay.dTriangle.vv2^Delaunay.dTriangle.html#vv2^^ ^0"
s[407] = "Delaunay.dTriangle.PreCalc^Delaunay.dTriangle.html#PreCalc^^ ^0"
s[408] = "Delaunay.dTriangle.xc^Delaunay.dTriangle.html#xc^^ ^0"
s[409] = "Delaunay.dTriangle.yc^Delaunay.dTriangle.html#yc^^ ^0"
s[410] = "Delaunay.dTriangle.r^Delaunay.dTriangle.html#r^^ ^0"
s[411] = "Delaunay.TDelaunay^Delaunay.TDelaunay.html^^ ^0"
s[412] = "Delaunay.TDelaunay.HowMany^Delaunay.TDelaunay.html#HowMany^Public declarations^ ^0"
s[413] = "Delaunay.TDelaunay.tPoints^Delaunay.TDelaunay.html#tPoints^^ ^0"
s[414] = "Delaunay.TDelaunay.TargetForm^Delaunay.TDelaunay.html#TargetForm^Variable for total number of points (vertices)^ ^0"
s[415] = "Delaunay.TDelaunay.Create^Delaunay.TDelaunay.html#Create^^    ^0"
s[416] = "Delaunay.TDelaunay.Destroy^Delaunay.TDelaunay.html#Destroy^^    ^0"
s[417] = "Delaunay.TDelaunay.Execute^Delaunay.TDelaunay.html#Execute^^    ^0"
s[418] = "Delaunay.TDelaunay.AddPoint^Delaunay.TDelaunay.html#AddPoint^^    ^0"
s[419] = "Delaunay.TDelaunay.Clear^Delaunay.TDelaunay.html#Clear^^    ^0"
s[420] = "Delaunay.TDelaunay.Vertices^Delaunay.TDelaunay.html#Vertices^^ ^0"
s[421] = "Delaunay.TDelaunay.Triangles^Delaunay.TDelaunay.html#Triangles^^ ^0"
s[422] = "Delaunay.TDelaunay.TriangleCount^Delaunay.TDelaunay.html#TriangleCount^^ ^0"
s[423] = "Delaunay.TDelaunay.VertexCount^Delaunay.TDelaunay.html#VertexCount^^ ^0"
s[424] = "Delaunay.TDelaunay.MaxX^Delaunay.TDelaunay.html#MaxX^^ ^0"
s[425] = "Delaunay.TDelaunay.MinX^Delaunay.TDelaunay.html#MinX^^ ^0"
s[426] = "Delaunay.TDelaunay.MaxY^Delaunay.TDelaunay.html#MaxY^^ ^0"
s[427] = "Delaunay.TDelaunay.MinY^Delaunay.TDelaunay.html#MinY^^ ^0"
s[428] = "Delaunay.MaxVertices^Delaunay.html#MaxVertices^Set these as applicable^ ^0"
s[429] = "Delaunay.MaxTriangles^Delaunay.html#MaxTriangles^^ ^0"
s[430] = "Delaunay.ExPtTolerance^Delaunay.html#ExPtTolerance^^ ^0"
s[431] = "Delaunay.TDVertex^Delaunay.html#TDVertex^^ ^0"
s[432] = "Delaunay.PVertex^Delaunay.html#PVertex^^ ^0"
s[433] = "Delaunay.TDTriangle^Delaunay.html#TDTriangle^^ ^0"
s[434] = "Delaunay.PTriangle^Delaunay.html#PTriangle^^ ^0"
s[435] = "Delaunay.TDComplete^Delaunay.html#TDComplete^^ ^0"
s[436] = "Delaunay.PComplete^Delaunay.html#PComplete^^ ^0"
s[437] = "Delaunay.TDEdges^Delaunay.html#TDEdges^^ ^0"
s[438] = "Delaunay.PEdges^Delaunay.html#PEdges^^ ^0"
s[439] = "Triangle^Triangle.html^^ ^0"
s[440] = "Triangle.TRefCounted^Triangle.TRefCounted.html^^ ^0"
s[441] = "Triangle.TRefCounted.Create^Triangle.TRefCounted.html#Create^^    ^0"
s[442] = "Triangle.TRefCounted.AddRef^Triangle.TRefCounted.html#AddRef^^    ^0"
s[443] = "Triangle.TRefCounted.DelRef^Triangle.TRefCounted.html#DelRef^^    ^0"
s[444] = "Triangle.TRefCounted.IsReferenced^Triangle.TRefCounted.html#IsReferenced^^    ^0"
s[445] = "Triangle.TRefList^Triangle.TRefList.html^^ ^0"
s[446] = "Triangle.TRefList.Create^Triangle.TRefList.html#Create^^    ^0"
s[447] = "Triangle.TRefList.Destroy^Triangle.TRefList.html#Destroy^^    ^0"
s[448] = "Triangle.TRefList.Add^Triangle.TRefList.html#Add^^    ^0"
s[449] = "Triangle.TRefList.Remove^Triangle.TRefList.html#Remove^^    ^0"
s[450] = "Triangle.TRefList.Delete^Triangle.TRefList.html#Delete^^    ^0"
s[451] = "Triangle.TRefList.Clear^Triangle.TRefList.html#Clear^^    ^0"
s[452] = "Triangle.TRefList.ClearUnreferenced^Triangle.TRefList.html#ClearUnreferenced^^    ^0"
s[453] = "Triangle.TRefList.Items^Triangle.TRefList.html#Items^^ ^0"
s[454] = "Triangle.TRefList.Count^Triangle.TRefList.html#Count^^ ^0"
s[455] = "Triangle.TTrianglePoint^Triangle.TTrianglePoint.html^^ ^0"
s[456] = "Triangle.TTrianglePoint.Create^Triangle.TTrianglePoint.html#Create^^    ^0"
s[457] = "Triangle.TTrianglePoint.AssignFrom^Triangle.TTrianglePoint.html#AssignFrom^^    ^0"
s[458] = "Triangle.TTrianglePoint.X^Triangle.TTrianglePoint.html#X^^ ^0"
s[459] = "Triangle.TTrianglePoint.Y^Triangle.TTrianglePoint.html#Y^^ ^0"
s[460] = "Triangle.TTrianglePoint.Value^Triangle.TTrianglePoint.html#Value^^ ^0"
s[461] = "Triangle.TTriangleLine^Triangle.TTriangleLine.html^^ ^0"
s[462] = "Triangle.TTriangleLine.Create^Triangle.TTriangleLine.html#Create^^    ^0"
s[463] = "Triangle.TTriangleLine.Destroy^Triangle.TTriangleLine.html#Destroy^^    ^0"
s[464] = "Triangle.TTriangleLine.AssignFrom^Triangle.TTriangleLine.html#AssignFrom^^    ^0"
s[465] = "Triangle.TTriangleLine.Scale^Triangle.TTriangleLine.html#Scale^^    ^0"
s[466] = "Triangle.TTriangleLine.Length^Triangle.TTriangleLine.html#Length^^    ^0"
s[467] = "Triangle.TTriangleLine.Intersection^Triangle.TTriangleLine.html#Intersection^^    ^0"
s[468] = "Triangle.TTriangleLine.StartPoint^Triangle.TTriangleLine.html#StartPoint^^ ^0"
s[469] = "Triangle.TTriangleLine.EndPoint^Triangle.TTriangleLine.html#EndPoint^^ ^0"
s[470] = "Triangle.TTrianglePolyline^Triangle.TTrianglePolyline.html^^ ^0"
s[471] = "Triangle.TTrianglePolyline.Create^Triangle.TTrianglePolyline.html#Create^^    ^0"
s[472] = "Triangle.TTrianglePolyline.Destroy^Triangle.TTrianglePolyline.html#Destroy^^    ^0"
s[473] = "Triangle.TTrianglePolyline.AddPoint^Triangle.TTrianglePolyline.html#AddPoint^^    ^0"
s[474] = "Triangle.TTrianglePolyline.AssignLine^Triangle.TTrianglePolyline.html#AssignLine^^    ^0"
s[475] = "Triangle.TTrianglePolyline.Points^Triangle.TTrianglePolyline.html#Points^^ ^0"
s[476] = "Triangle.TTrianglePolyline.Count^Triangle.TTrianglePolyline.html#Count^^ ^0"
s[477] = "Triangle.TTriangleElement^Triangle.TTriangleElement.html^^ ^0"
s[478] = "Triangle.TTriangleElement.Create^Triangle.TTriangleElement.html#Create^^    ^0"
s[479] = "Triangle.TTriangleElement.Destroy^Triangle.TTriangleElement.html#Destroy^^    ^0"
s[480] = "Triangle.TTriangleElement.Split^Triangle.TTriangleElement.html#Split^^    ^0"
s[481] = "Triangle.TTriangleElement.Split^Triangle.TTriangleElement.html#Split^^    ^0"
s[482] = "Triangle.TTriangleElement.SplitLeft^Triangle.TTriangleElement.html#SplitLeft^^    ^0"
s[483] = "Triangle.TTriangleElement.SplitRight^Triangle.TTriangleElement.html#SplitRight^^    ^0"
s[484] = "Triangle.TTriangleElement.SplitLeft^Triangle.TTriangleElement.html#SplitLeft^^    ^0"
s[485] = "Triangle.TTriangleElement.SplitRight^Triangle.TTriangleElement.html#SplitRight^^    ^0"
s[486] = "Triangle.TTriangleElement.GetIntersectionPoints^Triangle.TTriangleElement.html#GetIntersectionPoints^^    ^0"
s[487] = "Triangle.TTriangleElement.Point^Triangle.TTriangleElement.html#Point^^ ^0"
s[488] = "Triangle.TTriangleClipRect^Triangle.TTriangleClipRect.html^^ ^0"
s[489] = "Triangle.TTriangleClipRect.Create^Triangle.TTriangleClipRect.html#Create^^    ^0"
s[490] = "Triangle.TTriangleClipRect.Check^Triangle.TTriangleClipRect.html#Check^^    ^0"
s[491] = "Triangle.TTriangleClipRect.Left^Triangle.TTriangleClipRect.html#Left^^ ^0"
s[492] = "Triangle.TTriangleClipRect.Right^Triangle.TTriangleClipRect.html#Right^^ ^0"
s[493] = "Triangle.TTriangleClipRect.Top^Triangle.TTriangleClipRect.html#Top^^ ^0"
s[494] = "Triangle.TTriangleClipRect.Bottom^Triangle.TTriangleClipRect.html#Bottom^^ ^0"
s[495] = "Triangle.TTriangle^Triangle.TTriangle.html^^ ^0"
s[496] = "Triangle.TTriangle.Create^Triangle.TTriangle.html#Create^Public declarations^    ^0"
s[497] = "Triangle.TTriangle.Destroy^Triangle.TTriangle.html#Destroy^^    ^0"
s[498] = "Triangle.TTriangle.Clear^Triangle.TTriangle.html#Clear^^    ^0"
s[499] = "Triangle.TTriangle.Execute^Triangle.TTriangle.html#Execute^^    ^0"
s[500] = "Triangle.TTriangle.AddPoint^Triangle.TTriangle.html#AddPoint^^    ^0"
s[501] = "Triangle.TTriangle.AddClipPolyline^Triangle.TTriangle.html#AddClipPolyline^^    ^0"
s[502] = "Triangle.TTriangle.UnClip^Triangle.TTriangle.html#UnClip^^    ^0"
s[503] = "Triangle.TTriangle.Clip^Triangle.TTriangle.html#Clip^^    ^0"
s[504] = "Triangle.TTriangle.PolygonClip^Triangle.TTriangle.html#PolygonClip^^    ^0"
s[505] = "Triangle.TTriangle.PointCount^Triangle.TTriangle.html#PointCount^^ ^0"
s[506] = "Triangle.TTriangle.Points^Triangle.TTriangle.html#Points^^ ^0"
s[507] = "Triangle.TTriangle.ElementCount^Triangle.TTriangle.html#ElementCount^^ ^0"
s[508] = "Triangle.TTriangle.Elements^Triangle.TTriangle.html#Elements^^ ^0"
s[509] = "Triangle.TTriangle.ClipPolylines^Triangle.TTriangle.html#ClipPolylines^^ ^0"
s[510] = "Triangle.TTriangle.MaxValue^Triangle.TTriangle.html#MaxValue^^ ^0"
s[511] = "Triangle.TTriangle.MinValue^Triangle.TTriangle.html#MinValue^^ ^0"
s[512] = "Triangle.TTriangle.MaxPoint^Triangle.TTriangle.html#MaxPoint^^ ^0"
s[513] = "Triangle.TTriangle.MinPoint^Triangle.TTriangle.html#MinPoint^^ ^0"
s[514] = "Triangle.TTriangle.TriangleClipRect^Triangle.TTriangle.html#TriangleClipRect^^ ^0"
s[515] = "Triangle.TTriangle.ClipActive^Triangle.TTriangle.html#ClipActive^^ ^0"
s[516] = "Triangle.TTriangle.TriangleExecutable^Triangle.TTriangle.html#TriangleExecutable^Published declarations^ ^0"
s[517] = "Triangle.TTriangle.Modelname^Triangle.TTriangle.html#Modelname^^ ^0"
s[518] = "Triangle.TTriangle.QualityMesh^Triangle.TTriangle.html#QualityMesh^^ ^0"
s[519] = "Triangle.TTriangle.MinAngle^Triangle.TTriangle.html#MinAngle^^ ^0"
s[520] = "Triangle.TTriangle.TriangleImplementation^Triangle.TTriangle.html#TriangleImplementation^^ ^0"
s[521] = "Triangle.TTriangle.ClipPolyline^Triangle.TTriangle.html#ClipPolyline^^ ^0"
s[522] = "Triangle.TTriangle.TriangleClipProcessing^Triangle.TTriangle.html#TriangleClipProcessing^^ ^0"
s[523] = "Triangle.Distance^Triangle.html#Distance^^    ^0"
s[524] = "Triangle.Register^Triangle.html#Register^^    ^0"
s[525] = "Triangle.TTriangleType^Triangle.html#TTriangleType^^  ttInside    ttCrossing    ttOutside   ^0"
s[526] = "Triangle.TTriangleImplementation^Triangle.html#TTriangleImplementation^^  tiInternal    tiExternal   ^0"
s[527] = "Triangle.TTriangleClipProcessing^Triangle.html#TTriangleClipProcessing^^  tpDoNothing    tpClip    tpRemove    tpRemoveReverse    tpRemoveCrossing    tpRemoveCrossingReverse   ^0"
